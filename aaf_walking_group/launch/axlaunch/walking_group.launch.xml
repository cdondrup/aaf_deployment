<launch>
  <arg name="head_machine" default="localhost"/>
  <arg name="head_user" default=""/>
  <arg name="waypoint_set" default="aaf_waypoints"/>
  <arg name="meta_name" default="waypoint_set"/>
  <arg name="collection_name" default="aaf_walking_group"/>
  <arg name="waypoint_sounds_file" default="$(find aaf_walking_group)/conf/waypoint_sounds.yaml" />
  <arg name="recovery_whitelist" default="$(find aaf_walking_group)/conf/recovery_whitelist.yaml" />
  <arg name="music_set_group" default="aaf_walking_group_music"/>
  <arg name="music_set_waypoints" default="aaf_waypoint_sounds"/>
  <arg name="music_set_jingles" default="aaf_jingles"/>
  <arg name="music_set_recovery" default="aaf_walking_group_recovery_sounds"/>
  <arg name="music_file_recovery" default="nooo.mp3"/>
  <arg name="video_set" default="aaf_walking_group_videos"/>
  <arg name="image_set" default="aaf_walking_group_pictures"/>

  <machine name="$(arg head_machine)" address="$(arg head_machine)" env-loader="$(optenv ROS_ENV_LOADER )" user="$(arg head_user)" default="false"/>

  <node pkg="aaf_walking_group" type="wait_for_participant.py" name="wait_for_participant" output="screen" respawn="true"/>
  <node pkg="aaf_walking_group" type="guiding_action.py" name="guiding_server" output="screen" respawn="true"/>
  <node pkg="aaf_walking_group" type="media_server.py" name="image_server" output="screen" respawn="true">
    <param name="media_set" type="string" value="$(arg image_set)"/>
    <param name="media_set_type" type="string" value="Photo"/>
  </node>
  <node pkg="aaf_walking_group" type="media_server.py" name="video_server" output="screen" respawn="true">
    <param name="media_set" type="string" value="$(arg video_set)"/>
    <param name="media_set_type" type="string" value="Video"/>
  </node>
  <node pkg="aaf_walking_group" type="interface_server.py" name="interface_server" output="screen" respawn="true"/>
  <node pkg="aaf_walking_group" type="aaf_walking_group_state_machine.py" name="walking_group_smach" output="screen" respawn="true">
    <param name="mongodb_params/waypointset_name" type="string" value="$(arg waypoint_set)"/>
    <param name="mongodb_params/waypointset_collection" type="string" value="$(arg collection_name)"/>
    <param name="mongodb_params/waypointset_meta" type="string" value="$(arg meta_name)"/>
    <param name="recovery_whitelist" type="string" value="$(arg recovery_whitelist)"/>
  </node>
  <!--
  <node pkg="walking_group_recovery" type="toggle_walking_group_recovery_server.py" name="toggle_walking_group_recovery_server" output="screen" respawn="true">
    <param name="music_set" type="string" value="$(arg music_set_recovery)"/>
    <param name="audio_priority" type="double" value="0.9"/>
  </node>
  -->
  <include file="$(find walking_group_recovery)/launch/walking_group_recovery.launch">
    <arg name="music_set" value="$(arg music_set_recovery)"/>
    <arg name="music_file" value="$(arg music_file_recovery)"/>
    <arg name="audio_priority" value="0.9"/>
  </include>

  <include file="$(find aaf_waypoint_sounds)/launch/waypoint_sounds.launch">
    <arg name="music_set" value="$(arg music_set_waypoints)"/>
    <arg name="waypoint_sounds_file" value="$(arg waypoint_sounds_file)"/>
  </include>
  <node pkg="music_player" type="music_player_server.py" name="music_player_server" output="screen" respawn="true">
    <param name="music_set" type="string" value="$(arg music_set_group)"/>
    <param name="priority" type="double" value="0.8"/>
  </node>
  <include file="$(find sound_player_server)/launch/sound_player.launch">
    <arg name="music_set" value="$(arg music_set_jingles)"/>
    <arg name="min_volume" value="0.0"/>
  </include>

  <node pkg="social_card_reader" type="social_card_reader" name="social_card_reader" output="screen" respawn="true" machine="$(arg head_machine)"/>
  <node pkg="aaf_walking_group" type="positionOfCard.py" name="QSR_generator" output="screen" respawn="true" machine="$(arg head_machine)"/>

</launch>
